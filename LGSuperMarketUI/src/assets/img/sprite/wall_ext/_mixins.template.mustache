{
'functions': true
}

$sprite: (
{{#items}}
	{{name}}: (
	offset-x: {{px.offset_x}},
	offset-y: {{px.offset_y}},
	width: {{px.width}},
	height: {{px.height}},
	total-width: {{px.total_width}},
	total-height: {{px.total_height}},
	image: '{{{escaped_image}}}'
	),
{{/items}}
);

{{#options.functions}}

    @mixin sprite-size($image) {
    background-size: map-get(map-get($sprite, $image), 'total-width') map-get(map-get($sprite, $image), 'total-height');
    }

    @mixin sprite-size-small($image) {
    background-size: map-get(map-get($sprite, $image), 'total-width')/2 map-get(map-get($sprite, $image), 'total-height')/2;
    }

    @mixin sprite-width($image) {
    width: map-get(map-get($sprite, $image), 'width');
    }

    @mixin sprite-height($image) {
    height: map-get(map-get($sprite, $image), 'height');
    }

    @mixin sprite-width-small($image) {
    width: map-get(map-get($sprite, $image), 'width')/2;
    }

    @mixin sprite-height-small($image) {
    height: map-get(map-get($sprite, $image), 'height')/2;
    }

    @mixin sprite-position($image) {
    background-position: map-get(map-get($sprite, $image), 'offset-x') map-get(map-get($sprite, $image), 'offset-y');
    }

    @mixin sprite-position-small($image) {
    background-position: map-get(map-get($sprite, $image), 'offset-x')/2 map-get(map-get($sprite, $image), 'offset-y')/2;
    }

	@mixin sprite-image($image) {
	background-image: url(map-get(map-get($sprite, $image), 'image'));
	}

	@mixin sprite-image-retina($image) {
	$image-path: map-get(map-get($sprite, $image), 'image');
	$image-path-retina: str-slice($image-path, 1, str-index($image-path, '.png') - 1) + '@2x.png';

	background-image: url($image-path-retina);
	}

    //START ALL 4 ITERATIONS
    @mixin wall-sprite($image, $size: true) {


    /*1. NON-RETINA, MOBILE*/
    /*path to image: */
    @include sprite-image($image);
    /*sprite coordinates: */
    @include sprite-position($image);
    background-repeat: no-repeat;

    /* 1a. Mobile, use SMALLER size*/
    @if $size {
    @include sprite-width-small($image);
    @include sprite-height-small($image);
    }


    @media ( min-width: 29em ) {
    /*3. NON-RETINA, DESKTOP*/
    @if $size {
    @include sprite-width($image);
    @include sprite-height($image);
    }
    }

    //RETINA
    @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (   min--moz-device-pixel-ratio: 2),
    only screen and (     -o-min-device-pixel-ratio: 2/1),
    only screen and (        min-device-pixel-ratio: 2),
    only screen and (                min-resolution: 192dpi),
    only screen and (                min-resolution: 2dppx) {
    /*2. RETINA, MOBILE*/
    @include sprite-position-small($image);
    @include sprite-size-small($image);/* 2a. Mobile, use SMALLER size */
    @include sprite-image-retina($image);
    }

    @media
    only screen and (-webkit-min-device-pixel-ratio: 2) and ( min-width: 29em ),
    only screen and (   min--moz-device-pixel-ratio: 2) and ( min-width: 29em ),
    only screen and (     -o-min-device-pixel-ratio: 2/1) and ( min-width: 29em ),
    only screen and (        min-device-pixel-ratio: 2) and ( min-width: 29em ),
    only screen and (                min-resolution: 192dpi) and ( min-width: 29em ),
    only screen and (                min-resolution: 2dppx) and ( min-width: 29em ) {
    /*4. RETINA, DESKTOP*/
    @include sprite-position($image);
    @include sprite-size($image);
    }
    }

	.ext-wall {
	.adobe { @include wall-sprite(adobe); }
	.block-painted { @include wall-sprite(block-painted); }
	.block-painted-decorative { @include wall-sprite(block-painted-decorative); }
	.block-slump { @include wall-sprite(block-slump); }
	.brick-block { @include wall-sprite(brick-block); }
	.brick-solid { @include wall-sprite(brick-solid); }
	.brick-veneer { @include wall-sprite(brick-veneer); }
	.brownstone-solid { @include wall-sprite(brownstone-solid); }
	.logs { @include wall-sprite(logs); }
	.placeholder { @include wall-sprite(placeholder); }
	.poured-concrete { @include wall-sprite(poured-concrete); }
	.siding-aluminum-plastic { @include wall-sprite(siding-aluminum-plastic); }
	.siding-cement-fiber { @include wall-sprite(siding-cement-fiber); }
	.stone-block { @include wall-sprite(stone-block); }
	.stone-solid { @include wall-sprite(stone-solid); }
	.stone-veneer { @include wall-sprite(stone-veneer); }
	.stucco-block { @include wall-sprite(stucco-block); }
	.stucco-synthetic { @include wall-sprite(stucco-synthetic); }
	.wood { @include wall-sprite(wood); }
	img {
	width: 80px;
	height: 70px;
	}

	.mini-thumbnail img {
	width: 20px;
	height: 16px;
	}
	}


{{/options.functions}}